stages:
- build
- deploy

build:
  stage: build
  when: on_success
  only:
    - dev
    - master
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u directoryx -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY/bangunpos/front-bangun -f dockerfiles/Dockerfile.dev .
    - docker push $CI_REGISTRY/bangunpos/front-bangun

deploy-dev:
  stage: deploy
  image: junte/ssh-agent
  script:
        # Add the private SSH key to the build environment
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_DEV_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # login to gitlab registry       
    - ssh deployer@128.199.252.219 docker login -u directoryx -p $CI_JOB_TOKEN $CI_REGISTRY
    # then we cd to folder with docker-compose, run docker-compose pull to update images, and run services with `docker-compose up -d`
    - ssh deployer@128.199.252.219 "cd /Web/front-bangun && docker-compose -f docker-compose.yml pull && HOME=/home/deployer docker-compose -f docker-compose.yml up -d"
    - ssh deployer@128.199.252.219 "cd /Web/front-bangun && docker cp front-bangun:/usr/share/nginx/html/ html"
  environment:
      name: dev
  only:
    - dev

build-prod:
  stage: deploy
  image: node:lts-buster
  before_script:
    - apt-get update -y && apt-get install -yqqf openssh-client git unzip sshpass rsync --fix-missing
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_TOOLKIT" | tr -d '\r' | ssh-add - > /dev/null

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan $GITLAB_URL >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - git config --global user.email "our@email.com"
    - git config --global user.name "Gitlab Runner"
  script:
    # Pull repo
    - echo "Pulling external repo into build"
    - ssh git@$GITLAB_URL
    - git clone git@$GITLAB_URL:$EXTERNAL_REPO_URL /tmp
    
    # Do something after pulling your repo
    - npm install
    - npm run build
    # Push repo changes into current repo
    - git remote rm origin && git remote add origin "git@$GITLAB_URL:${CI_PROJECT_PATH}.git"
    - git add /tmp/front-bangun
    - git commit -m "Commit message here :)" || echo "No changes, nothing to commit!"
    - git push origin HEAD:$CI_COMMIT_REF_NAME
  environment:
      name: prod
  only:
    - prod
